SMTable = jQuery.fn.extend({ SmartTable: function(d) { $.extend(SMTable, { redraw: function() { f(d, $(this)) }, destroy: function() { $(this).empty() } }); var a = function(t, n) { var l = t.find(".headarea > .lengthinputcont > .lengthinput"),
                e = t.find(".headarea > .orderinputcont > .orderinput"),
                i = t.find(".headarea > .ordertypeinputcont > .ordertypeinput"),
                o = t.find(".pagination");
            l.off("change").on("change", function() { t.find("ul.table").empty(), o.empty(); var e = n;
                e.length = l.val(), e.draw = 1, e.start = 0, f(e, t) }), e.off("change").on("change", function() { t.find("ul.table").empty(); var e = $(this).val();
                console.log(e), o.empty(); var a = n;
                a.length = l.val(), a.draw = 1, a.start = 0, a.order.column = e, a.order.dir = i.val(), f(a, t) }), i.off("change").on("change", function() { t.find("ul.table").empty(), o.empty(); var e = n;
                e.length = parseInt(l.val()), e.draw = 1, e.start = 0, e.order.dir = $(this).val(), console.log(e), f(e, t) }), $(".viewtypeinput").off("change").on("change", function() { t.find("ul.table").empty(), t.find("table").find("tbody").empty(), o.empty(); var e = n;
                e.length = parseInt(l.val()), e.draw = 1, e.start = 0, e.dataview = $(this).val(), console.log(e), t.empty(), r(t, n), f(n, t, a(t, n)) }), $(".searchtable").off("keyup").on("keyup", function(e) { if (13 == e.keyCode) { t.find("ul.table").empty(), o.empty(); var a = n;
                    a.length = parseInt(l.val()), a.draw = 1, a.start = 0, a.search.value = $(this).val(), f(a, t) } }) };

        function f(c, p, e) { cols = c.columns; var a = c.ajax.url,
                t = c.ajax.method;
            $.ajax({ url: a, method: t, data: c, success: function(e) { var a = JSON.parse(e),
                        t = a.recordsFiltered,
                        n = c.dataview,
                        l = parseInt($(".lengthinput").val()),
                        o = 0; if (o = t % l == 0 ? parseInt(t / l) : parseInt(t / l) + 1, "table" == n) { var r = "<tbody>",
                            s = a.data;
                        $.each(s, function(e, t) { r += "<tr>", $.each(cols, function(e, a) { r += "<td>" + t[a.data] + "</td>" }), r += "</tr>" }), r += "</tbody>", 0 < p.find("table").find("tbody").length ? p.find("table").find("tbody").replaceWith(r) : p.find("table").append(r) } else if ("grid" == n) { r = "", s = a.data;
                        $.each(s, function(e, t) { r += "<li>", $.each(cols, function(e, a) { r += "<div>" + a.name + ": " + t[a.data] + "</div>" }), r += "</li>" }), p.find("ul.table").append(r) }! function(e, a, o) { 1 == e ? o.find(".pagination").append('<li class="page-item prev disabled"><a class="page-link prev" href="#">Previous</a></li>') : o.find(".pagination").append('<li class="page-item prev"><a class="page-link prev" href="#">Previous</a></li>'); for (i = 0; i < a; i++) i + 1 == e ? o.find(".pagination").append('<li class="page-item active"><a class="page-link" href="#">' + (i + 1) + "</a></li>") : o.find(".pagination").append('<li class="page-item"><a class="page-link" href="#">' + (i + 1) + "</a></li>");
                        e == a ? o.find(".pagination").append('<li class="page-item next disabled"><a class="page-link next" href="#">Next</a></li>') : o.find(".pagination").append('<li class="page-item next"><a class="page-link next" href="#">Next</a></li>');
                        $(".page-link").off("click").on("click", function() { var e = parseInt($(".page-item.active > a").html()),
                                a = parseInt($(this).html()); if (e != a) { if (o.find("ul.table").empty(), o.find(".pagination").empty(), $(this).hasClass("prev")) var t = e - 1;
                                else if ($(this).hasClass("next")) { var t = e + 1;
                                    console.log(t) } else var t = $(this).html(); var n = (t - 1) * $(".lengthinput").val(),
                                    l = d;
                                l.draw = t, l.start = n, l.length = $(".lengthinput").val(), f(l, o) } }) }(c.draw, o, p) } }) }

        function r(e, a) { console.log(a); var t = a.lengthinput,
                n = a.length,
                l = a.dataview,
                i = a.columns,
                o = '<div class="headarea"><label class="lengthinputcont">Length: <select class="form-control lengthinput" type="text">';
            $.each(t, function(e, a) { o += '<option value="' + a + '">' + a + "</option>" }), o += "</select></label>", o += '<label class="orderinputcont">Order by: <select class="form-control orderinput" type="text">', $.each(i, function(e, a) { "true" == a.orderable && (o += '<option value="' + e + '">' + a.data + "</option>") }), o += "</select></label>", o += '<label class="ordertypeinputcont">Order dir: <select class="form-control ordertypeinput" type="text">', o += '<option value="asc">asc</option>', o += '<option value="desc">desc</option>', o += "</select></label>", o += '<label class="viewtypecont">View: <select class="form-control viewtypeinput" type="text">', o += '<option value="table">table</option>', o += '<option value="grid">grid</option>', o += "</select></label>", o += '<label class="searchtablecont"><input class="form-control searchtable" placeholder="Search"  type="text"></label></div>'; var r = e.attr("class") + "_smtable"; "table" == l ? o += '<table class="table ' + r + ' table-bordered" type="text"></table>' : "grid" == l && (o += '<ul class="table ' + r + '" type="text"></ul>'), o += '<div class="tablefooterarea"><nav aria-label="Page navigation example"><ul class="pagination"></ul></nav></div>', e.append(o), $(".lengthinput").val(n), $(".viewtypeinput").val(a.dataview), "table" == l && function(e, a) { cols = a.columns, ordercol = a.order.column, e.find("thead").append("<tr>"); var t = "<thead class='thead-light'><tr>";
                $.each(cols, function(e, a) { t += "<th style='width:" + a.width + "'>", t += "<a  data='" + e + "' class='headerlinks'>" + a.name + "</a>", t += "</th>" }), t += "</tr></thead>", 0 == e.find("table").find("thead").length && e.find("table").append(t) }(e, a) } return this.each(function() { var e = $(this);
            d.draw = 1, d.start = 0, d.search = {}, d.search.value = "", d.search.regex = "false", r(e, d), f(d, e, a(e, d)) }) } });